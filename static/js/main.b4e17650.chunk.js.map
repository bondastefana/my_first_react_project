{"version":3,"sources":["components/SearchBar.js","components/ProductTable.js","components/ProductRow.js","staticData/data.js","components/ProductCategoryRow.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","hideOutOfStock","filterItems","Container","className","Row","Col","md","type","placeholder","onKeyUp","name","onClick","htmlFor","ProductTable","ProductRow","price","inStock","style","color","categoryNames","products","ProductCategoryRow","isClicked","searchedItem","map","productObj","index","productName","filter","product","toUpperCase","App","useState","setIsClicked","setSearchedItem","event","target","value","category","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4e17650.chunk.js","sourcesContent":["import './SearchBar.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst SearchBar = (props) => {\r\n\t/* hideOutOfStock will be called and executed (parent <App /> where it is defined) \r\n\teach time the user will perfom a click event on the checkbox. */\r\n\tconst { hideOutOfStock, filterItems } = props;\r\n\r\n\treturn (\r\n\t\t<Container className=\"search-container\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<input className=\"search-box\" type=\"text\" placeholder=\"Search...\" onKeyUp={filterItems} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t<input className=\"checkbox\" type=\"checkbox\" name=\"stock\" onClick={hideOutOfStock} />\r\n\t\t\t\t\t<label htmlFor=\"stock\">Only show products in stock</label>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import './ProductTable.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst ProductTable = (props) => {\r\n\treturn (\r\n\t\t<Container className=\"table-header\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<span className=\"table-head\">Name</span>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t<span className=\"table-head\">Price</span>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProductTable;\r\n","import './ProductRow.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst ProductRow = (props) => {\r\n\tconst { name, price, inStock } = props;\r\n\tconst getStockStatus = () => {\r\n\t\treturn inStock ? { color: 'black' } : { color: 'red' };\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className=\"row-container\">\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<span style={getStockStatus()}>{name}</span>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t<span>{price}</span>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProductRow;\r\n","const categoryNames = ['Sporting Goods', 'Electronics'];\r\nconst products = [\r\n\t{\r\n\t\tname: 'Football',\r\n\t\tprice: '$49.99',\r\n\t\ttype: 'Sporting Goods',\r\n\t\tinStock: true,\r\n\t},\r\n\t{\r\n\t\tname: ' Baseball',\r\n\t\tprice: '$9.99',\r\n\t\ttype: 'Sporting Goods',\r\n\t\tinStock: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Basketball',\r\n\t\tprice: '$29.99',\r\n\t\ttype: 'Sporting Goods',\r\n\t\tinStock: false,\r\n\t},\r\n\t{\r\n\t\tname: 'iPod Touch',\r\n\t\tprice: '$99.99',\r\n\t\ttype: 'Electronics',\r\n\t\tinStock: true,\r\n\t},\r\n\t{\r\n\t\tname: 'iPhone 5',\r\n\t\tprice: '$399.99',\r\n\t\ttype: 'Electronics',\r\n\t\tinStock: false,\r\n\t},\r\n\t{\r\n\t\tname: 'Nexus 7',\r\n\t\tprice: '$199.99',\r\n\t\ttype: 'Electronics',\r\n\t\tinStock: true,\r\n\t},\r\n];\r\n\r\nexport { products, categoryNames };\r\n","import ProductRow from './ProductRow.js';\r\nimport { products } from '../staticData/data.js';\r\nimport './ProductCategoryRow.css';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst ProductCategoryRow = (props) => {\r\n\tconst { name, isClicked, searchedItem } = props;\r\n\r\n\tconst displayProducts = () => {\r\n\t\treturn products\r\n\t\t\t.map((productObj, index) => {\r\n\t\t\t\tconst { name: productName, price, inStock, type } = productObj;\r\n\r\n\t\t\t\t// We hide the product if there is no stock for that product and the checkbox is clicked.\r\n\t\t\t\t// inStock - coming from products data object.\r\n\t\t\t\t// isClicked - coming from <SearchBar /> that calls handleClick in the <App /> and triggers re-render due to state changes (from false to true).\r\n\t\t\t\tconst hideProduct = !inStock && isClicked;\r\n\r\n\t\t\t\t// We only want to display the Products that are from the right category, not all the products twice + hideProduct variable.\r\n\t\t\t\treturn name === type && !hideProduct ? (\r\n\t\t\t\t\t<ProductRow key={index} name={productName} price={price} inStock={inStock} />\r\n\t\t\t\t) : null;\r\n\t\t\t})\r\n\t\t\t.filter((product) => {\r\n\t\t\t\tif (!searchedItem) {\r\n\t\t\t\t\treturn product;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn product?.props.name.toUpperCase() === searchedItem.toUpperCase();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container className=\"product-container\">\r\n\t\t\t<h3 className=\"product-name\">{name}</h3>\r\n\t\t\t<h5>{displayProducts()}</h5>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProductCategoryRow;\r\n","// React imports\r\nimport { useState } from 'react';\r\n// Components import\r\nimport SearchBar from './components/SearchBar.js';\r\nimport ProductTable from './components/ProductTable.js';\r\nimport ProductCategoryRow from './components/ProductCategoryRow.js';\r\n// Data imports\r\nimport { categoryNames } from './staticData/data.js';\r\n// CSS imports\r\nimport './App.css';\r\n// Bootstrap imports\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst App = () => {\r\n\t// Setting initial state to 'false' (not clicked) for the 1st render.\r\n\tconst [isClicked, setIsClicked] = useState(false);\r\n\tconst [searchedItem, setSearchedItem] = useState('');\r\n\r\n\t/* Setting state to 'true' when it's 'false' and vice-versa (by click event from <SearchBar /> component) => triggers\r\n\tre-render of the whole <App /> component with the new value after the state is being set by 'setIsClicked(!isClicked)'. */\r\n\tconst handleClick = (event) => {\r\n\t\t// Always set the value with the !value not only once with true (because we have check/uncheck).\r\n\t\tsetIsClicked(!isClicked);\r\n\t};\r\n\r\n\tconst handleSearch = (event) => {\r\n\t\tsetSearchedItem(event.target.value);\r\n\t};\r\n\r\n\tconst displayCategoryNames = () => {\r\n\t\treturn categoryNames.map((category, index) => {\r\n\t\t\treturn <ProductCategoryRow key={index} name={category} isClicked={isClicked} searchedItem={searchedItem} />;\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<SearchBar hideOutOfStock={handleClick} filterItems={handleSearch} />\r\n\t\t\t<ProductTable />\r\n\t\t\t{displayCategoryNames()}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}